{# src/Blogger/BlogBundle/Resources/views/Analysis/createAnalysisStep.html.twig #}
{% form_theme form 'CKMAppBundle::Form/errors.html.twig' %}
{% extends 'CKMAppBundle::layout.html.twig' %}

{% block titlePage %}
Analysis - <small> {{ message }} </small>
{% endblock %}
{% block content %}
<h3>Analysis Definition - {{ message1 }}</h3>

{% for flashMessage in app.session.flashbag.get('notice') %}
  <div class="row">
    <div class="col-lg-6">
      <div class="alert alert-danger">
          <p><span class="label label-default"> Warning </span></p>
          <p>{{ flashMessage }}</p>
      </div>
    </div>
  </div>
{% endfor %}

<div class="row">
  <div class="col-sm-6">
    <form role="form" method="post" {{ form_enctype(form) }}>
      {{ form_widget(form) }}
      <br />
      <div class="form-group">
        <div class="col-sm-6">
          {% if step==1 %}
          <a class="btn btn-danger" href="{{ path('CKMAppBundle_analyse_by_user', {'user_id':app.user.id} ) }}"><i class="glyphicon glyphicon-remove"></i> Cancel Analysis</a>
          {% endif %}
          {% if step==2 or step==3 %}
          <a class="btn btn-danger" href="{{ path('CKMAppBundle_analyse_create_analyse_remove', {'analyse': analyse}) }}"><i class="glyphicon glyphicon-remove"></i> Cancel Analysis</a>
          {% endif %}

          <button class="btn btn-primary" type="submit" ><i class="glyphicon glyphicon-ok"></i>  &nbsp;Submit</button>
        </div>
      </div>
    </form>
  </div>

{% if step==3 %}
 <div style="float:right;" class="col-sm-4">
   <div >
    <div class="panel panel-primary">
      <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-arrow-circle-o-right "></i> Your target choice</h3>
      </div>
      <div class="panel-body">
        <div class="list-group">
          {% for target in getIsTargets(analyse) %}
            <a class="list-group-item" href="#">
              <i class="fa fa-check"></i> \({{target.name}}\)
              <span style="float:right;">
              \([\)
              \({{target.scanMin}}\)
              \(,\)
              \({{target.scanMax}}\)
              \(]\)
              </span>
            </a>
          {% endfor %}
        </div>
      </div>
    </div>
   </div>
 </div>
{% endif %}

</div>

<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX", "output/HTML-CSS"],
    tex2jax: {
      inlineMath: [ ["\\(","\\)"] ],
      displayMath: [ ["\\[","\\]"] ],
      processEscapes: true
    },
    "HTML-CSS": { availableFonts: ["TeX"] }
  });
</script>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
{% endblock %}
