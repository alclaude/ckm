<?php

namespace CKM\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ScenarioDocumentationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScenarioDocumentationRepository extends EntityRepository
{
    public function findDocByInputAndScenario($scenarioName='', $inputName='')
    {
      return $this->getEntityManager()
          ->createQuery(
              'SELECT o FROM CKM\AppBundle\Entity\ScenarioDocumentation o WHERE o.scenario =:scenario and o.input=:input'
          )
          ->setParameters(array(
                'scenario'   => $scenarioName,
                'input'      => $inputName,
                )
           )
          ->getResult();
    }
    
    public function removeDocumentationByScenario($scenario='')
    {
      return $this->getEntityManager()
          ->createQuery(
              'DELETE FROM CKM\AppBundle\Entity\ScenarioDocumentation o WHERE o.scenario =:scenario'
          )
          #DELETE FROM `ckm_scenario_documentation` WHERE `scenario_id`=16;
          ->setParameters(array(
                'scenario'   => $scenario,
                )
           )
          #->getResult();
          ->execute();
    }

    public function findDocByScenario($scenarioName='')
    {
      return $this->getEntityManager()
          ->createQuery(
              'SELECT o FROM CKM\AppBundle\Entity\ScenarioDocumentation o WHERE o.scenario = :scenario'
          )
          ->setParameters(array(
                'scenario'   => $scenarioName,
                )
           )
          ->getResult();
    }

  public function findByScenarioCSV($scenario='', $name='')
    {
      $documentations = $this->findDocByScenario($scenario);

      $csv = array();

      foreach ($documentations as $documentation) {
        $csv[]= $documentation->getInput().';'.$documentation->getExplanation();
      }
      return count($csv)>0 ? $csv : array('There is no documentation for the scenario '.$name );
    }
}
